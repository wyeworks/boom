name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.7, 1.8, 1.9, 1.10.3]
        otp: [19.0, 20.0, 21.0, 22.0, 23.0]
        exclude:
          - elixir: 1.7
            otp: 23.0
          - elixir: 1.8
            otp: 19.0
          - elixir: 1.8
            otp: 23.0
          - elixir: 1.9
            otp: 19.0
          - elixir: 1.9
            otp: 23.0
          - elixir: 1.10.3
            otp: 19.0
          - elixir: 1.10.3
            otp: 20.0

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Check quality
      run: |
        mix format --check-formatted
        mix credo --strict
        mix dialyzer --no-check --halt-exit-status

    - name: Run tests
      run: mix test
